{"posts":[{"title":"Atri的unity之旅(1)","text":"在本章，我会介绍unity组件基类MonoBehaviour(生命周期函数),组件:Transform,Component相关语法,CharacterController,Rigidbody。 MonoBehaviour 基类与生命周期生命周期函数是指那些在游戏对象的生命周期内由Unity引擎自动调用的特殊函数。这些函数按照特定的顺序执行，允许开发者在游戏对象被创建、激活、更新或销毁时执行代码。 几个阶段初始化Awake ；脚本实例被加载时调用，​无论脚本是否启用。用于初始化变量或游戏状态。OnEnable:当脚本被启用或激活时调用。​可多次执行​（如物体反复激活/禁用）。Start:在第一次 Update 调用前，且脚本启用时执行。常用于依赖其他组件完成的初始化。 物理模拟FixedUpdate：在固定的时间间隔​（默认0.02秒）调用，与帧率无关。​必须用于物理计算​（如力、碰撞）。OnTrigger[Enter,Stay,Exit]:当碰撞体进入/停留/离开触发器时调用。OnCollision[Enter,Stay,Exit]：当发生碰撞时调用。tips：OnCollisionEnter方法必须是在两个碰撞物体都不勾选isTrigger的前提下才能进入，反之只要勾选一个isTrigger那么就能进入OnTriggerEnter方法。 游戏逻辑Update：每帧调用一次，是游戏核心逻辑（如输入检测、非物理移动）的主要位置。LateUpdate：在所有 Update 执行完毕后调用。常用于相机跟随，确保目标物体已移动完毕。 结束OnDisable：当脚本被禁用或物体变为非激活时调用。用于清理当前状态。OnDestroy：当物体被销毁时调用。用于释放资源、清理内存。 transform 世界的坐标位置；transform.position = new Vector();transform.localPosition = new Vector3();tips：记得区别世界坐标与相对坐标 旋转设置绝对朝向：transform.rotation = Quaternion.Euler();相对方向旋转：transform.localRotation = Quaternion.Euler();对应的欧拉角表示为：transform.eulerAngles = new Vector3();transform.localeulerAngles = new Vector3(); 放缩transform.localScale = new Vector3(); 朝向与方向transform.[up,forward,right]：是以物体自身为坐标轴重建的正方向。 父与子transform.SetParent(Transform parent, bool worldPositionStays = true);Transform top = transform.root;//设置top为最高层级 坐标系转换Vector worldpoint=transfom.TransformPoint(localpoint)；//将相对this的局部坐标转化为世界坐标Vector3 localPoint = A.transform.InverseTransformPoint(worldPoint);//将世界坐标转化为相对于A的局部坐标Vector3 worldDirection = TransformDirection(localDirection);//将局部方向转换为世界方向Vector3 localDirection = InverseTransformDirection(worldDirection);//transformDirection的逆方向TransformVector(Vector3 localVector)/InverseTransformVector(Vector3 worldVector)//效果同上，但是会考虑缩放 移动与旋转transform.Translate(Vector3.forward * Time.deltaTime * speed);//// 默认为 Space.Selftransform.Translate(Vector3.right * 1f, Space.World);//世界坐标下的移动transform.Rotate();//方向*度数（默认为本地坐标）LookAt(Transform target)/LookAt(Vector3 worldPosition)//看向物体Quaternion targetRot = Quaternion.LookRotation(targetPos - transform.position);//生成四元数朝向（用于平滑旋转或插值）transform.SetPositionAndRotation(newPos, Quaternion.Euler());//同时设置位置与旋转 Component获取组件例：Rigidbody rb = gameObject.GetComponent();//获取某个游戏对象的组件例：Transform childTransform = gameObject.transform.GetChild(0).GetComponent();//获取子对象的组件 添加组件Rigidbody rb = gameObject.AddComponent()//为物体添加组件MyScript myScript = gameObject.AddComponent();//为物体添加脚本 移除组件Destroy(gameObject.GetComponent(), time);//time表示销毁延迟（可省） 启用与禁用Component.enabled=(bool); 通过类型获取组件Collider[] colliders = gameObject.GetComponents();//获取所有collider组件Rigidbody rbInChildren = gameObject.GetComponentInChildren();//获取子物体组件TryGetComponent//尝试获取组件(if)","link":"/2025/10/19/unity%E4%B9%8B%E6%97%85%E4%B8%80%E2%80%94%E2%80%94%E8%AE%A4%E8%AF%86%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6/"},{"title":"自我介绍","text":"这里是AtriNo.1,一位刚入门的CTFer，主攻Re，也会玩点misc。","link":"/2025/10/27/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"}],"tags":[{"name":"unity","slug":"unity","link":"/tags/unity/"},{"name":"组件","slug":"组件","link":"/tags/%E7%BB%84%E4%BB%B6/"},{"name":"Re","slug":"Re","link":"/tags/Re/"},{"name":"Fresher","slug":"Fresher","link":"/tags/Fresher/"}],"categories":[{"name":"unity","slug":"unity","link":"/categories/unity/"},{"name":"CTF","slug":"CTF","link":"/categories/CTF/"}],"pages":[]}